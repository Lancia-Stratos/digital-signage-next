// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator zod {
  provider         = "zod-prisma-types"
  // 自動生成されたファイルが配置されるパス
  output           = "../src/schemas/zod"
  // ファイル分割の定義
  // useMultipleFiles                 = true // default is false
  createInputTypes = false // default is true
  // createModelTypes                 = false // default is true
  // addInputTypeValidation           = false // default is true
  // addIncludeType                   = false // default is true
  // addSelectType                    = false // default is true
  // validateWhereUniqueInput         = true // default is false
  // createOptionalDefaultValuesTypes = true // default is false
  // createRelationValuesTypes        = true // default is false
  // createPartialTypes               = true // default is false
  // useDefaultValidators             = false // default is true
  // coerceDate                       = false // default is true
  // writeNullishInModelTypes         = true // default is false
  // prismaClientPath                 = "./path/to/prisma/client" // default is client output path
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 製品マスターテーブル
model Product {
  id            Int      @id @default(autoincrement())
  name          String   @unique // 製品名
  defaultLength Float? // デフォルトの長さ
  unitId        Int // 単位ID
  unit          Unit     @relation(fields: [unitId], references: [id])
  customerId    Int // 取引先ID
  customer      Customer @relation(fields: [customerId], references: [id])

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  shipments Shipment[]
}

// 単位マスターテーブル
model Unit {
  id        Int       @id @default(autoincrement())
  name      String    @unique // 単位名
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

// 取引先マスターテーブル
model Customer {
  id          Int        @id @default(autoincrement())
  name        String // 取引先名（例：積水ナノコートテクノロジー）
  address     String // 住所（例：愛知県清須市）
  postalCode  String? // 郵便番号
  phoneNumber String? // 電話番号
  email       String? // メールアドレス
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  shipments   Shipment[]
  Product     Product[]
}

// ユーザーテーブル
model User {
  id        Int        @id @default(autoincrement())
  name      String // ユーザー名
  email     String     @unique
  password  String? // ハッシュ化されたパスワード
  role      UserRole   @default(USER)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  shipments Shipment[]
}

// ユーザーロール
enum UserRole {
  ADMIN
  MANAGER
  USER
}

// 出荷予定テーブル
model Shipment {
  id            Int            @id @default(autoincrement())
  shipmentDate  DateTime // 出荷日（例：4月14日（月曜日））
  customerId    Int // 出荷先ID
  customer      Customer       @relation(fields: [customerId], references: [id])
  productId     Int // 製品ID
  product       Product        @relation(fields: [productId], references: [id])
  quantity      Int // 本数（例：20）
  length        Float // 製品長（例：1,100 m）
  lotNumber     String? // Lot No
  status        ShipmentStatus @default(SCHEDULED)
  notes         String? // 備考
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  createdBy     Int? // 作成者ID
  createdByUser User?          @relation(fields: [createdBy], references: [id])
}

// 出荷ステータス
enum ShipmentStatus {
  SCHEDULED // 予定
  IN_PROGRESS // 出荷中
  COMPLETED // 完了
  CANCELLED // キャンセル
}
